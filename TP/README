                   Welcome to Turbo Pascal 7.0
                   ---------------------------

This README file contains important, last minute information
about Turbo Pascal 7.0. In addition to this file, there are
several files in the \TP\DOC directory that you should browse.


TABLE OF CONTENTS
-----------------
1. How to get help
2. TPX.EXE - the protected mode IDE
3. Installation
4. New Features
5. Release Notes
6. Important note for Borland C++ and Paradox 4.0 users


1. HOW TO GET HELP
------------------
If you have any problems, please read this file, the online
documentation files in \TP\DOC, the online help files, and the
Turbo Pascal manuals first. If you still have a question and
need assistance, help is available from the following sources:

1. Type GO BPROGA on the CompuServe bulletin board system. If you
   are not a member of CompuServe, see the enclosed special
   offer.

2. Check with your software dealer or user group.

3. Write to us:

   Borland International
   Turbo Pascal 7.0 Technical Support, Dept 26
   1800 Green Hills Road
   P.O. Box 660001
   Scotts Valley, CA  95067-0001

   Please include your serial number or we will be unable to
   process your letter.

4. If you have an urgent problem and you have sent in the license
   agreement that accompanied this package, you can call the
   Borland Technical Support Department at (408) 461-9177. Please
   have the following information ready before calling:

   a. Product name and serial number from the distribution disks.

   b. Product version number. Both the IDE and the command-line
      compiler display a version number when they are executed.

   c. Computer brand, model, and the brands and model numbers of
      any additional hardware.

   d. Operating system and version number. (The version number
      can be determined by typing VER at the DOS prompt.)

   e. If running Windows, the version and mode of your Windows
      session. (From Program Manager, select Run from the File
      menu, and enter "WINVER").

   f. Contents of your AUTOEXEC.BAT and CONFIG.SYS files.


2. TPX.EXE - THE PROTECTED MODE IDE
-----------------------------------
Turbo Pascal 7.0 features TPX.EXE, a new, high-capacity
Integrated Development Environment. TPX allows you to edit,
compile, and debug very large applications from within the IDE.
TPX gains access to all free extended memory on your system and
requires the following minimum configuration:

  Processor type  :  80286
  DOS memory      :  640k
  Extended memory :  1MB free

(On 80286 machines, it is recommended that you install a memory
manager such as HIMEM.SYS. Refer to your DOS manuals for more
information on memory managers.)

Please note that TPX requires the files RTM.EXE and DPMI16BI.OVL
to be located on the path, or in the same directory as TPX.EXE.


3. INSTALLATION
---------------
Note: Turbo Pascal 7.0 is not intended to be installed over any
previous version of Turbo Pascal.

Use the INSTALL program to install Turbo Pascal onto your system.
The files on the distribution disks are all archived and INSTALL
will de-archive them for you. INSTALL places them into
subdirectories and automatically creates configuration files for
the command-line compiler and the Integrated Development
Environments (IDEs).

IMPORTANT: All references to directory paths in this README file
assume that you have used INSTALL's default directory structure.

To start the installation, place the disk labeled INSTALL in
Drive A:, and type A:INSTALL.


4. NEW FEATURES
---------------
Turbo Pascal 7.0 offers many new features, including:

  o ObjectBrowser - Using TPX, you can browse units, objects, and
    symbols while you edit your source code. Includes full cross
    reference information for every identifier in your program.

  o Persistent browsing - TPX saves your program's symbol
    information across sessions so you can instantly browse or
    debug your program after exiting and then reloading TPX.

  o Syntax highlighting - Assign unique text colors for symbols,
    reserved words, identifiers, strings, etc. You can also print
    your syntax-highlighted source code from inside both IDEs.

  o Tools menu - Transfer control to external programs such as
    GREP. You can also add your own tools.

  o User-installable help files in the IDEs. Indexes from
    multiple help files are automatically merged so you can
    perform keyword or incremental searches.

  o Local Menus - A click of the right mouse button (or Alt+F10)
    brings up a context-sensitive menu.

  o Optimizations and RTL enhancements

    o RTL now automatically recognizes 386 (or better) processors
      and uses fast 32-bit instructions for Longint arithmetic.
    o Faster text file I/O.
    o Faster string Pos routine.
    o Optimized sets.
    o Integer overflow checking {$Q+/-} - Integer, Word, etc.
    o PChar support - Allows null terminated strings.
    o OBJ file line number information pass-through - Allows
      stepping through C or ASM code when using the integrated
      debugger.

  o Language extensions

    o Open array parameters {$P+/-} - Allows safer, more
      flexible variable length array parameters.
    o New OpenString type - Allows a procedure or function to
      accept any type of string parameter, even in $V+.
    o Constant parameters - Efficient, read-only value
      parameters.
    o Public/private sections - Allows public and private
      sections of objects to be declared in any order.
    o Typed @ operator {$T+/-} - Enforces type checking when
      using the address (@) operator.
    o Inherited reserved word - Allows references to an inherited
      method without knowing the ancestor's name.

  o New standard procedures/functions

    o Assigned - Returns True if a pointer is not equal to nil
      (especially useful for procedure and function pointers).
    o Include - Adds an item to a set.
    o Exclude - Removes an item from a set.
    o Break & Continue - FOR, WHILE, REPEAT loop control.
    o Low & High - Return the low or high bounds of open array
      parameters or of any scalar type.

  o Turbo Vision enhancements

    o Data validation objects.
    o New outliner object.
    o New methods for inserting/executing windows and dialog
      boxes.
    o Multi-state check boxes.
    o Cluster items that can be disabled.

  o Completely reorganized printed documentation, with new
    tutorial programs.

  o Expanded online help system, covering all new features.

See the "What's new" section of the User's Guide for more
information regarding the new features of Turbo Pascal 7.0.


5. RELEASE NOTES
----------------

  o RTMRES.EXE - This program (found in \TP\BIN) causes the
    Borland DPMI loader and server to be resident in memory. This
    will speed up the loading of TPX.EXE.

    If you have an 80286-based system and want to run TPX.EXE in
    a Windows standard-mode DOS box, you should run RTMRES before
    running Windows. This is only necessary if you will run more
    than one Borland protected-mode application at a time
    (TPX.EXE, BC 3.x, Paradox 4.0, and so on).

    To use RTMRES.EXE for this purpose, specify the amount of
    extended memory the Borland DPMI server should allocate,
    using a DOS environment variable called DPMIMEM. For example:

      SET DPMIMEM=MAXMEM 2048

    This command, which can be executed from the DOS prompt or a
    batch file, allocates 2 MB to the DPMI server and leaves all
    remaining extended memory for Windows. Note that TPX.EXE
    requires a minimum of 1 MB of extended memory.

    The command-line syntax for RTMRES is:

      RTMRES [ProgName [arg1, arg2,...]]

    Where ProgName is the optional name of a program to
    immediately execute (which avoids loading a copy of your
    command processor if the program is an .EXE or .COM file).
    You must include the program's extension, for example:

      RTMRES win.com

  o If you run TPX.EXE from a Windows DOS box and want to modify
    the TPX.PIF file provided, make sure to specify at least 1 MB
    XMS. Without a minimum memory setting, TPX might not be able
    to get the memory it needs; without a maximum memory setting,
    the DPMI run-time manager (RTM) will grab half of all
    available memory, slow Windows performance, and prevent you
    from opening more than one or two Windows DOS boxes.


6. IMPORTANT NOTE FOR BORLAND C++ AND PARADOX 4.0 USERS
-------------------------------------------------------
The DPMILOAD.EXE and DPMI16BI.OVL files provided with this
release replace the older ones that came with Paradox 4.0 and
BC++ 3.0 or later. Delete or rename the older versions and put
\TP\BIN on your DOS path (so Paradox and BC can use the newer
ones).

If you want to be able to run BC++ or Paradox from within
TPX.EXE, you will need to use the EXTLEAVE option for the RTM
environment variable in order to leave enough memory available.
For example, you can set aside 2 MB for other programs by using:

  SET RTM=EXTLEAVE 2048

See the printed documentation for more information regarding the
RTM environment variable.

If you plan to shell out from Paradox or BC++ to run TPX.EXE,
limit the amount of extended memory used by those programs. For
Paradox, use its /extk command-line parameter; and for BC++, use
its /x command-line parameter. Refer to their documentation for
more information on the use of command-line options.

Here's a summary for troubleshooting purposes:

  1.  Are there any copies of DPMILOAD.EXE or DPMI16BI.OVL on the
      path prior to those provided \TP\BIN? Or in the same
      directories as BC.EXE or PARADOX.EXE? If so, replace them
      with TP 7.0's newer versions or remove them and set your
      DOS path correctly.

  2.  Have you set the RTM environment variable? For example:

        SET RTM=EXTLEAVE 2048

  3.  If starting Paradox or BC first, have you used the required
      command-line options?

                      *    *    *    *    *

